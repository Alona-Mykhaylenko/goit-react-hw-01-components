{"version":3,"sources":["components/profile/profile.module.css","components/transactionHistory/transactionHistory.module.css","components/statistics/statistics.module.css","components/friendList/friendListItem/friendListItem.module.css","components/friendList/friendList.module.css","components/profile/Profile.js","components/statistics/Statistics.js","components/friendList/friendListItem/FriendListItem.js","components/friendList/FriendList.js","components/transactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","class","listItem","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","item","percentage","id","FriendListItem","isOnline","green","red","picture","width","userName","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistory","tableHead","tableHeadRow","tableRowFull","tableRow","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87e310c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3J2C7\",\"avatar\":\"profile_avatar__2Vc7L\",\"name\":\"profile_name__16Ppu\",\"stats\":\"profile_stats__26d4Q\",\"tag\":\"profile_tag__1S1r0\",\"location\":\"profile_location__39aht\",\"listItem\":\"profile_listItem__28AfJ\",\"label\":\"profile_label__21ETj\",\"quantity\":\"profile_quantity__ch83Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transactionHistory_transactionHistory__wQr6w\",\"tableHead\":\"transactionHistory_tableHead__ca870\",\"tableHeadRow\":\"transactionHistory_tableHeadRow__2Zocg\",\"tableRow\":\"transactionHistory_tableRow__cMLu9\",\"tableRowFull\":\"transactionHistory_tableRowFull__1xPoU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"statistics_statList__3yNlB\",\"item\":\"statistics_item__Xq3QB\",\"percentage\":\"statistics_percentage__3z3Lx\",\"title\":\"statistics_title__1q7MC\",\"statistics\":\"statistics_statistics__1KTTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"friendListItem_item__1-msy\",\"picture\":\"friendListItem_picture__1YRjU\",\"userName\":\"friendListItem_userName__N-ODM\",\"circle\":\"friendListItem_circle__2hcnT\",\"red\":\"friendListItem_red__2BmWA friendListItem_circle__2hcnT\",\"green\":\"friendListItem_green__1hmKA friendListItem_circle__2hcnT\",\"paddings\":\"friendListItem_paddings__1uvtW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friendList_friendList__3Qo0M\"};","// import userEvent from \"@testing-library/user-event\";\r\nimport React from \"react\";\r\nimport styles from \"./profile.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p class={styles.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        <li className={styles.listItem}>\r\n          <span className={styles.label}>Followers: </span>\r\n          <span className={styles.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={styles.listItem}>\r\n          <span className={styles.label}>Views: </span>\r\n          <span className={styles.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={styles.listItem}>\r\n          <span className={styles.label}>Likes: </span>\r\n          <span className={styles.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n      <ul className={styles.statList}>\r\n        {stats.map((item) => (\r\n          <li key={item.id} className={styles.item}>\r\n            <div className={styles.label}>{item.label}</div>\r\n\r\n            <div className={styles.percentage}>{item.percentage}%</div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n\r\n  stats: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  item,\r\n  picture,\r\n  userName,\r\n  green,\r\n  red,\r\n} from \"./friendListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <li className={item}>\r\n      <div className={isOnline ? green : red}></div>\r\n      <img className={picture} src={avatar} alt=\"\" width=\"48\" />\r\n      <p className={userName}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FriendListItem;\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport FriendListItem from \"./friendListItem/FriendListItem\";\r\nimport { friendList } from \"./friendList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={friendList}>\r\n      {friends.map((friend) => (\r\n        <FriendListItem\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n          isOnline={friend.isOnline}\r\n          key={friend.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.shape({\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./transactionHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={styles.transactionHistory}>\r\n      <thead>\r\n        <tr className={styles.tableHead}>\r\n          <th className={styles.tableHeadRow}>Type</th>\r\n          <th className={styles.tableHeadRow}>Amount</th>\r\n          <th className={styles.tableHeadRow}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => {\r\n          return (\r\n            <tr key={item.id} className={styles.tableRowFull}>\r\n              <td className={styles.tableRow}>{item.type}</td>\r\n              <td className={styles.tableRow}>{item.amount}</td>\r\n              <td className={styles.tableRow}>{item.currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.number.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n","// import logo from \"./logo.svg\";\n// import \"./App.css\";\nimport React from \"react\";\n\nimport Profile from \"./components/profile/Profile\";\nimport Statistics from \"./components/statistics/Statistics\";\nimport FriendList from \"./components/friendList/FriendList\";\nimport TransactionHistory from \"./components/transactionHistory/TransactionHistory\";\n\nimport user from \"./data/user.json\";\nimport statisticalData from \"./data/statistical-data.json\";\nimport friends from \"./data/friends.json\";\nimport transactions from \"./data/transactions.json\";\n\nconst App = () => {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n};\n\nexport default App;\n","import \"modern-normalize/modern-normalize.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.css\";\nimport App from \"./App\";\n\nimport { StrictMode } from \"react\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}